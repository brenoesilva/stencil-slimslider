/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface SlimSlider {
      'autoPlay': boolean;
      'autoPlayTimer': number;
      'childsClassName': string;
      'dir': string;
      'infinite': boolean;
      'itemsPerSlide': number;
      'setPan': (enabled: boolean) => void;
      'showButtons': boolean;
      'showPointers': boolean;
      'showThumbnails': boolean;
      'slideTo': (n: number) => void;
      'threshold': number;
      'timing': number;
    }
  }

  interface HTMLSlimSliderElement extends StencilComponents.SlimSlider, HTMLStencilElement {}

  var HTMLSlimSliderElement: {
    prototype: HTMLSlimSliderElement;
    new (): HTMLSlimSliderElement;
  };
  interface HTMLElementTagNameMap {
    'slim-slider': HTMLSlimSliderElement;
  }
  interface ElementTagNameMap {
    'slim-slider': HTMLSlimSliderElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'slim-slider': JSXElements.SlimSliderAttributes;
    }
  }
  namespace JSXElements {
    export interface SlimSliderAttributes extends HTMLAttributes {
      'autoPlay'?: boolean;
      'autoPlayTimer'?: number;
      'childsClassName'?: string;
      'dir'?: string;
      'infinite'?: boolean;
      'itemsPerSlide'?: number;
      'onAfterSlimInit'?: (event: CustomEvent) => void;
      'onAfterSlimSlide'?: (event: CustomEvent) => void;
      'showButtons'?: boolean;
      'showPointers'?: boolean;
      'showThumbnails'?: boolean;
      'threshold'?: number;
      'timing'?: number;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
